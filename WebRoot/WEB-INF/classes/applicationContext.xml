<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.2.xsd  
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    
<!-- 数据源的配置 -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<!-- 指定连接数据库的驱动 -->
	<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	<!-- 指定连接数据库的URL -->
	<property name="url" value="jdbc:mysql://localhost:3306/carrentsystem"/>
	<!-- 指定连接数据库的用户名 -->
	<property name="username" value="root"/>
	<!-- 指定连接数据库的密码 -->
	<property name="password" value="root"/>
	<!-- 指定连接数据库的连接池的初始化大小 -->
	<property name="initialSize" value="2"/>
	<!-- 指定连接数据库的连接池的最大连接数 -->
	<property name="maxActive" value="10"/>
	<!-- 指定连接数据库的连接池的最大空闲时间 -->
	<property name="maxIdle" value="30"/>
	<!-- 指定连接数据库的连接池的最大等待时间 -->
	<property name="maxWait" value="10000"/>
</bean>


<!-- 定义Hibernate的sessionFactory -->
<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<!-- 依赖注入已配置好的数据源 -->
	<property name="dataSource" ref="dataSource"/>
	<!-- 指定HIbernate的映射文件 -->
	<property name="mappingResources">
		<list>
			<value>cn/edu/hezeu/jsj/pojo/Admin.hbm.xml</value>
			<value>cn/edu/hezeu/jsj/pojo/Car.hbm.xml</value>
			<value>cn/edu/hezeu/jsj/pojo/Cost.hbm.xml</value>
			<value>cn/edu/hezeu/jsj/pojo/Customer.hbm.xml</value>
			<value>cn/edu/hezeu/jsj/pojo/Order.hbm.xml</value>
			<value>cn/edu/hezeu/jsj/pojo/User.hbm.xml</value>
		</list>
	</property>
	<!-- 设置Hibernate的属性 -->
	<property name="hibernateProperties">
		<props>
			<!-- 配置数据库方言 -->
			<prop key="hibernate.dialet">org.hibernate.dialect.MySQLDialect</prop>
			<!-- 设置控制台是输出sql语句 -->
			<prop key="hibernate.hbm2ddl.auto">update</prop>
			<prop key="show_sql">true</prop>
			<prop key="format_sql">true</prop>
		</props>
	</property>
</bean>
    <!-- 事务管理器的配置 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 启动Spring容器对注解型事务管理的支持 -->
	<tx:annotation-driven transaction-manager="txManager"/>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    	<property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    
    <!-- AdminDao -->
    <bean id="adminDao" class="cn.edu.hezeu.jsj.dao.Impl.AdminDaoImpl">
    	<property name="hibernateTemplate" ref="hibernateTemplate"></property>
    </bean>
    <!-- AdminService -->
    <bean id="adminService" class="cn.edu.hezeu.jsj.service.Impl.AdminServiceImpl">
    	<property name="adminDao" ref="adminDao"></property>
    </bean>
    
    <!-- OrderDao -->
    <bean id="orderDao" class="cn.edu.hezeu.jsj.dao.Impl.OrderDaoImpl">
    	<property name="hibernateTemplate" ref="hibernateTemplate"></property>
    </bean>
    <!-- OrderService -->
    <bean id="orderService" class="cn.edu.hezeu.jsj.service.Impl.OrderServiceImpl">
    	<property name="orderDao" ref="orderDao"></property>
    </bean>
   
   
</beans>